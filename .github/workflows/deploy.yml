name: deploy

on:
  workflow_run:
    workflows: [testing]
    branches: [main]
    types:
      - completed

jobs:

  deploy-docs:

    # only run if commit is a push to master and the testing finished
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install pandoc
        run: sudo apt-get install pandoc

      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .[docs]
          pip install -e .[fireworks]

      - name: Build
        run: sphinx-build docs/src docs_build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          publish_dir: ./docs_build

  deploy-pypi:

    # only run if commit is tagged as a version and the docs finished
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    needs:
      - docs

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Build packages
        run: |
          pip install setuptools setuptools_scm wheel
          python setup.py sdist bdist_wheel

      - name: Publish
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_PASSWORD }}

      - name: Write release info
        run: awk 'BEGIN {p = 0} {a = 0 }; /^v\d*.\d*.\d*./ { p += 1; a = 1}; p + a == 1 { print } ' docs/src/changelog.rst | sed -e '1,1d' | sed  -e '/./,$!d' -e :a -e '/^\n*$/{$d;N;ba' -e '}' > release_info.txt

  deploy-github:

    runs-on: ubuntu-latest
    needs:
      - deploy-pypi

    steps:
      - name: Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body_path: release_info.txt
          draft: false
          prerelease: false
